#!/bin/bash
set -ex

main() {
  ensure_brew_exists
  update_brew_things
  update_tmux_plugins
  submodule_setup
  ensure_git_config_set
  macos_setup

  echo "Finished hopping!"
}

ensure_brew_exists() {
  echo "Ensuring brew exists..."
  if [ ! -x /usr/local/bin/brew ] ; then
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi
}

update_brew_things() {
  echo "Updating brew things..."
  brew tap Homebrew/bundle
  brew update
  brew upgrade --ignore-pinned
  brew bundle -v --file="$HOME/Brewfile"
}

update_tmux_plugins() {
  echo "Updating tmux plugins..."
  if [ ! -d "${HOME}/.tmux/plugins/tpm" ]
  then
    mkdir -p "${HOME}/.tmux/plugins"
    git clone https://github.com/tmux-plugins/tpm "${HOME}/.tmux/plugins/tpm"
  else
    (cd "${HOME}/.tmux/plugins/tpm" ; git pull )
  fi
}

submodule_setup() {
  git submodule update --init --recursive
}

ensure_git_config_set() {
  echo "Ensuring git configs are set up..."
  local gitconfig

  if [ ! -f "${HOME}/.gitconfig" ] ; then
    write_git_config_header
  fi

  if [ "$(head -n2 $HOME/.gitconfig)" != "[include] path = $HOME/.gitconfig-shared" ]
  then
    gitconfig=$(cat "${HOME}/.gitconfig")
    write_git_config_header
    echo "${gitconfig}" >> "${HOME}/.gitconfig"
  fi
}

write_git_config_header() {
  echo "[include]" > "${HOME}/.gitconfig"
  echo "  path = ${HOME}/.gitconfig-shared" >> "${HOME}/.gitconfig"
}

# TODO separate this to some platform specific setup
macos_setup() {
  rm ~/Library/Application\ Support/Dock/*.db ; killall Dock
  defaults write com.apple.dock ResetLaunchPad -bool true; killall Dock
}

main
